name: backend
on: 
  push:
    branches:
      - main
    paths:
      - service/**
      - .github/workflows/azure_backend.yaml
permissions:
  id-token: write
  contents: read
jobs: 
  build:
    name: build
    runs-on: ubuntu-latest
    defaults: 
      run: 
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.0  

      - name: dotnetbuild
        run: |
          cd ./service/Microsoft.DSX.ProjectTemplate.API
          dotnet build --configuration release

      - name: dotnetpublish
        run: |
          dotnet publish ${{ github.workspace }}/service/Microsoft.DSX.ProjectTemplate.API --no-build --configuration release --output ${{ github.workspace }}/service/Microsoft.DSX.ProjectTemplate.API/publish

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0 
        with:
          name: backend
          path: ${{ github.workspace }}/service/Microsoft.DSX.ProjectTemplate.API/publish # or path/to/artifact

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
      
      - name: terraform-init
        run: |
          terraform -chdir="${{ github.workspace }}/service/infrastructure" init \
                    --backend-config="${{ github.workspace }}/service/infrastructure/config.tfbackend" \
                    --backend-config="key=backend.tfstate" \
                    --backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
                    --backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
                    --backend-config="client_id=${{ secrets.AZURE_CLIENT_ID }}"
          

      - name: terraform-apply
        run: |
          terraform -chdir="${{ github.workspace }}/service/infrastructure" apply \
                    -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
                    -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
                    -var="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
                    --auto-approve
